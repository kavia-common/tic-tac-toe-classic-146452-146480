{"is_source_file": true, "format": "Kotlin", "description": "MainActivity.kt defines the primary activity for a Tic Tac Toe game. It manages the game board, user interactions, game state, UI updates, and game logic including checking for wins, ties, and handling score persistence across rounds.", "external_files": ["R.layout.activity_main", "R.id.tvScore", "R.id.tvTurn", "R.id.grid", "R.id.btnReset", "R.id.btn0", "R.id.btn1", "R.id.btn2", "R.id.btn3", "R.id.btn4", "R.id.btn5", "R.id.btn6", "R.id.btn7", "R.id.btn8", "R.color.op_text", "R.color.op_primary", "R.color.op_secondary", "R.color.op_text_secondary", "R.drawable.cell_background"], "external_methods": ["findViewById", "setContentView", "getString", "ContextCompat.getColor", "findViewById<Button>", "setOnClickListener", "setText", "setTextColor", "isEnabled", "setEnabled", "setBackgroundDrawable", "setAlpha", "getDrawable"], "published": ["MainActivity"], "classes": [{"name": "MainActivity", "description": "Main activity managing Tic Tac Toe game logic, UI, and user interactions."}], "methods": [{"name": "onCreate", "description": "Initializes game UI, binds views, sets click listeners, and prepares the game board."}, {"name": "styleCell", "description": "Applies visual styles to individual game cell buttons."}, {"name": "onCellClicked", "description": "Handles user clicks on a cell, updates game state, and checks for game outcomes."}, {"name": "togglePlayer", "description": "Switches the current player between 'X' and 'O'."}, {"name": "updateTurnIndicator", "description": "Updates the UI to indicate which player's turn it is."}, {"name": "updateScore", "description": "Refreshes the displayed scores for both players."}, {"name": "onGameOver", "description": "Handles end-of-game state, updates scores, and highlights winning line."}, {"name": "newRound", "description": "Resets the game board for a new round while preserving scores."}, {"name": "highlightCells", "description": "Highlights the winning combination of cells."}, {"name": "checkGameState", "description": "Analyzes the board to determine if there's a winner, a tie, or the game continues."}, {"name": "findWinningLine", "description": "Identifies the line of cells that constitute a winning condition, if any."}], "calls": ["updateScore()", "updateTurnIndicator()", "findWinningLine()", "highlightCells()", "checkGameState()", "getString()", "ContextCompat.getColor()", "setOnClickListener()", "setText()", "setTextColor()", "setEnabled()", "setBackgroundDrawable()", "setAlpha()"], "search-terms": ["Tic Tac Toe", "MainActivity Kotlin", "Android game board", "game state management", "score tracking", "cell highlighting", "activity_main layout", "cell buttons", "game logic", "player turn indicator"], "state": 2, "file_id": 9, "knowledge_revision": 24, "git_revision": "", "revision_history": [{"19": ""}, {"24": ""}], "hash": "69e78c6210607ff728831385f03affbe", "format-version": 4, "code-base-name": "android_frontend", "filename": "android_frontend/app/src/main/kotlin/org/example/app/MainActivity.kt"}